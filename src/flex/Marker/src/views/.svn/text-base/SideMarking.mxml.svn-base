<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="cc()">
<mx:Script>
	<![CDATA[
		import mx.events.FlexEvent;
		import vo.SpecificComments;
		import mx.binding.utils.BindingUtils;
		import events.MarkingAreaEvent;
		import vo.CommentVO;
		import models.Marks;
	
		[Bindable]
		[Embed(source='/../img/tick.png')]
		private var tick:Class;
		
		private var _currentPage:int;
		
		[Bindable]
		public var marks:Marks;
		[Bindable]
		public var markingView:MarkingAreaView;
		[Bindable]
		public var currentComment:CommentVO;
		[Bindable]
		private var spec:SpecificComments;
		[Bindable]
		public var state:String;
		
		private function cc():void {
			this.removeChild(this.jotterPanel);
			this.generalComment.text = this.marks.generalComment;
			this.markingView.addEventListener(MarkingAreaEvent.HAS_FOCUS,this.changeComment);
		}
		private function changeComment(e:MarkingAreaEvent):void {
			trace('sma change comment ');
			this.updateComment();
			this.currentComment = e.comment;
			this.spec = this.currentComment.specComments.clone();
			this.checkForDataAndSelect();
		}
		public function updateComment():void {
			if(this.currentComment) this.currentComment.specComments = this.spec;
			this.marks.generalComment = this.generalComment.text;
		}
		private function iconEnabled(s:String):Class {
			if(s.length > 0) return tick;
			return null;
		}
		private function updateStyle():void { 
			this.spec.style=this.style.text;
		}
		private function updateArgument():void { 
		this.spec.argument=this.argument.text; }
		private function updateEvidence():void { 
			this.spec.evidence=this.evidence.text;
		}
		private function updatePlanning():void { 
			this.spec.planning=this.planning.text; 
		}
		private function updateIntroConc():void { 
			this.spec.introConc=this.introConc.text; 
		}
		private function genCom():void { 
			this.spec.introConc=this.introConc.text; 
		}
		private function reset():void {
			this.currentComment = null;
		}
		private function checkForDataAndSelect():void {
			if(this.spec.style != null) {
				this.specEntry.selectedIndex = 0;
				return;
			}
			if(this.spec.argument != null) {
				this.specEntry.selectedIndex = 1;
				return;
			}
			if(this.spec.evidence != null) {
				this.specEntry.selectedIndex = 2;
				return;
			}
			if(this.spec.planning != null) {
				this.specEntry.selectedIndex = 3;
				return;
			}
			if(this.spec.introConc != null) {
				this.specEntry.selectedIndex = 4;
				return;
			}
		}
		[Bindable]
		public function set currentPage(num:int):void {
			this.updateComment();
			this._currentPage = num;
			this.reset();
		}
		public function get currentPage():int {
			return this._currentPage;
		}
	]]>
</mx:Script>
	<mx:Panel width="100%" title="Comment on specific skill displayed in text" id="specific">
		<mx:Accordion id="specEntry" width="100%">
			<mx:VBox label="Style"  width="100%" icon="{iconEnabled(this.spec.style)}">
				<mx:TextArea id="style" enabled="{this.currentComment}" text="{this.spec.style}" change="this.updateStyle()" width="100%" height="200" >
					
				</mx:TextArea>
			</mx:VBox>
			<mx:VBox label="Argument"  width="100%" icon="{iconEnabled(this.spec.argument)}" >
				<mx:TextArea id="argument" enabled="{this.currentComment}"  text="{this.spec.argument}" change="this.updateArgument()" width="100%" height="200" >
					
				</mx:TextArea >
			</mx:VBox>
			<mx:VBox label="Evidence"  width="100%" icon="{iconEnabled(this.spec.evidence)}">
				<mx:TextArea  id="evidence" enabled="{this.currentComment}" text="{this.spec.evidence}"  change="this.updateEvidence()" width="100%" height="200" >
					
				</mx:TextArea >
			</mx:VBox>
			<mx:VBox label="Planning"  width="100%" icon="{iconEnabled(this.spec.planning)}" >
				<mx:TextArea id="planning" enabled="{this.currentComment}" text="{this.spec.planning}" change="this.updatePlanning()" width="100%" height="200"  >
					
				</mx:TextArea>
			</mx:VBox>
			<mx:VBox label="Introduction and conclusion" width="100%"  icon="{iconEnabled(this.spec.introConc)}">
				<mx:TextArea id="introConc" enabled="{this.currentComment}" text="{this.spec.introConc}" change="this.updateIntroConc()" width="100%" height="200" >
					
				</mx:TextArea>
			</mx:VBox>
		</mx:Accordion>
	</mx:Panel>
	<mx:Panel id="jotterPanel" width="100%" height="50%" title="Jotter for general comment">
		<mx:TextArea id="generalComment" width="100%" height="100%" text="{this.marks.generalComment}" />
	</mx:Panel>
</mx:VBox>
