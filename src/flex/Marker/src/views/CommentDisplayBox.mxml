<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	height="350"
	width="200" 
	visible="true" 
	label="Comment #"
	preinitialize="_preinitialize(event)"		
	showCloseButton="true"
	>
	<mx:VBox>			
		<mx:Label id="commentTypeBox" text="Comment on: {this._VO.commentType}" />
		<mx:TextArea id="commentTextArea" height="220" editable="false" text="{this._VO.commentText}">
			
		</mx:TextArea>
		<mx:Button label="Done" click="_done()">
			
		</mx:Button>
	</mx:VBox>		
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.CloseEvent;
			import events.CommentViewEvent;
			import events.MarkingAreaEvent;
			
			import vo.CommentVO;
			
			import mx.binding.utils.*;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			private const CLOSE_WARNING:String = 'You have entered a comment which will be lost if you close this comment. Do you want to continue?';
			private const CLOSE_TITLE:String = 'Are you sure you want to close this comment?';
			
			private var _markingArea:MarkingAreaView;		
			
			// the value object shared with marking box view, and the two values that are bound 
			// to this part of the view
			[Bindable]
			public var _VO:CommentVO;
			
						
			/**
			 * Called by other objects as a constructor replacement
			 * */
			public function init(markingBox:MarkingBoxView,markingArea:MarkingAreaView,VO:CommentVO):void {	
				this._VO = VO;
				this._registerMarkingBox(markingBox);	
				this._markingArea = markingArea;
				this._markingArea.addEventListener(MarkingAreaEvent.HAS_FOCUS,this._focusChangeHandler);
				this._markingArea.addEventListener(MarkingAreaEvent.DONE,this._doneHandler);
				this.addEventListener(CloseEvent.CLOSE,this._done);
			}
			/**
			 * Set up data bindings in preinit, as required
			 * */
			public function _preinitialize(event:Event):void {
				// set up event handlers for user events					
				this.addEventListener(FocusEvent.FOCUS_IN,this._gotFocusHandler,false,0,true);
			}
			/**
			 * make sure we know which marking box this comment needs to listen to etc
			 * */
			public function _registerMarkingBox(markingBox:MarkingBoxView):void {
				this.x = markingBox.x +markingBox.width + 25;
				this.y = markingBox.y;
			}
			/**
			 * Communicate a focus change request
			 * */
			private function _gotFocusHandler(event:FocusEvent):void {
				var msg:CommentViewEvent = new CommentViewEvent(CommentViewEvent.RESTORE,this._VO);
				this.dispatchEvent(msg);
			}		
			/**
			 * On receipt of a change focus message, if this box doesn't have focus, hide it
			 * */
			private function _focusChangeHandler(event:MarkingAreaEvent):void {			
				if(event.comment != this._VO) {
					this.visible = false;
					return;
				} 
				this.visible = true;										
			}			
 			/**
 			 * Called when user clicks 'Done'
 			 * */
 			 private function _done(e:Event = null):void {
 			 	this.dispatchEvent(new CommentViewEvent(CommentViewEvent.DONE));
 			 }
 			 private function _doneHandler(e:MarkingAreaEvent):void {
 			 	this.visible = false;
 			 }
		]]>
	</mx:Script>
</mx:TitleWindow>